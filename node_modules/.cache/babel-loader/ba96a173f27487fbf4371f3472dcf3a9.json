{"ast":null,"code":"import _slicedToArray from\"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/* React Context allow us to use and store data between components*/import{createContext,useState,useEffect}from\"react\";import{onAuthStateChangedListener,createUserDocumentFromAuth}from\"../utils/firebase/firebase.utils\";//as the actual value you want to access\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var UserContext=/*#__PURE__*/createContext({currentUser:null,setCurrentUser:function setCurrentUser(){return null;}});//This is the component itself normally wrapped around the <App /> component\nexport var UserProvider=function UserProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];var value={currentUser:currentUser,setCurrentUser:setCurrentUser};//here we are centralizing the need of calling setCurrentUser and createUserDocumentFromAuth in all the different components.\nuseEffect(function(){var unsubscribe=onAuthStateChangedListener(function(user){if(user){createUserDocumentFromAuth(user);}setCurrentUser(user);});return unsubscribe;},[]);return/*#__PURE__*/_jsx(UserContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["createContext","useState","useEffect","onAuthStateChangedListener","createUserDocumentFromAuth","UserContext","currentUser","setCurrentUser","UserProvider","children","value","unsubscribe","user"],"sources":["/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/context/user.context.jsx"],"sourcesContent":["/* React Context allow us to use and store data between components*/\nimport { createContext, useState, useEffect } from \"react\";\n\nimport {\n  onAuthStateChangedListener,\n  createUserDocumentFromAuth,\n} from \"../utils/firebase/firebase.utils\";\n\n//as the actual value you want to access\nexport const UserContext = createContext({\n  currentUser: null,\n  setCurrentUser: () => null,\n});\n\n//This is the component itself normally wrapped around the <App /> component\nexport const UserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = { currentUser, setCurrentUser };\n\n  //here we are centralizing the need of calling setCurrentUser and createUserDocumentFromAuth in all the different components.\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener((user) => {\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n      setCurrentUser(user);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n"],"mappings":"oKAAA,oEACA,OAASA,aAAT,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CAEA,OACEC,0BADF,CAEEC,0BAFF,KAGO,kCAHP,CAKA;2CACA,MAAO,IAAMC,YAAW,cAAGL,aAAa,CAAC,CACvCM,WAAW,CAAE,IAD0B,CAEvCC,cAAc,CAAE,gCAAM,KAAN,EAFuB,CAAD,CAAjC,CAKP;AACA,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAe,MAAkB,IAAfC,SAAe,MAAfA,QAAe,CAC5C,cAAsCR,QAAQ,CAAC,IAAD,CAA9C,wCAAOK,WAAP,eAAoBC,cAApB,eACA,GAAMG,MAAK,CAAG,CAAEJ,WAAW,CAAXA,WAAF,CAAeC,cAAc,CAAdA,cAAf,CAAd,CAEA;AACAL,SAAS,CAAC,UAAM,CACd,GAAMS,YAAW,CAAGR,0BAA0B,CAAC,SAACS,IAAD,CAAU,CACvD,GAAIA,IAAJ,CAAU,CACRR,0BAA0B,CAACQ,IAAD,CAA1B,CACD,CACDL,cAAc,CAACK,IAAD,CAAd,CACD,CAL6C,CAA9C,CAOA,MAAOD,YAAP,CACD,CATQ,CASN,EATM,CAAT,CAWA,mBAAO,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAED,KAA7B,UAAqCD,QAArC,EAAP,CACD,CAjBM"},"metadata":{},"sourceType":"module"}