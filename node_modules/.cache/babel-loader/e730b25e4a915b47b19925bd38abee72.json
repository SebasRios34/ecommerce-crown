{"ast":null,"code":"var _jsxFileName = \"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/components/cart-dropdown/cart-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CartContext } from \"../../context/cart.context\";\nimport Button from \"../button/button.component\";\nimport CartItem from \"../cart-item/cart-item.component\"; //Using Styled-Components\n\nimport { CartDropDownContainer, CartItems, EmptyMessage } from \"./cart-dropdown.styles.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropDown = () => {\n  _s();\n\n  //retrieve the cartItems placed using CartContext\n  const {\n    cartItems\n  } = useContext(CartContext); //navigate helps us to go the checkout page when button clicked\n\n  const navigate = useNavigate();\n\n  const navigateToCheckoutHandler = () => {\n    navigate(\"/checkout\");\n  };\n  /*\n    Here all the tags are retrieved from cart-dropdown.styles.jsx\n    If cartItems isn't empty it will display all the cart items inside\n    Else the cart-dropdown will show \"Your cart is empty\"\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(CartDropDownContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CartItems, {\n      children: cartItems.length ? cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n        cartItem: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 35\n      }, this)) : /*#__PURE__*/_jsxDEV(EmptyMessage, {\n        children: \"Your cart is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: navigateToCheckoutHandler,\n      children: \"Go TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartDropDown, \"KR2Px0ZVc0JAt+MbrfDd3BLaqA0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CartDropDown;\nexport default CartDropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropDown\");","map":{"version":3,"names":["useContext","useNavigate","CartContext","Button","CartItem","CartDropDownContainer","CartItems","EmptyMessage","CartDropDown","cartItems","navigate","navigateToCheckoutHandler","length","map","item","id"],"sources":["/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/components/cart-dropdown/cart-dropdown.component.jsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { CartContext } from \"../../context/cart.context\";\n\nimport Button from \"../button/button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\n\n//Using Styled-Components\nimport {\n  CartDropDownContainer,\n  CartItems,\n  EmptyMessage,\n} from \"./cart-dropdown.styles.jsx\";\n\nconst CartDropDown = () => {\n  //retrieve the cartItems placed using CartContext\n  const { cartItems } = useContext(CartContext);\n\n  //navigate helps us to go the checkout page when button clicked\n  const navigate = useNavigate();\n  const navigateToCheckoutHandler = () => {\n    navigate(\"/checkout\");\n  };\n\n  /*\n    Here all the tags are retrieved from cart-dropdown.styles.jsx\n    If cartItems isn't empty it will display all the cart items inside\n    Else the cart-dropdown will show \"Your cart is empty\"\n  */\n  return (\n    <CartDropDownContainer>\n      <CartItems>\n        {cartItems.length ? (\n          cartItems.map((item) => <CartItem key={item.id} cartItem={item} />)\n        ) : (\n          <EmptyMessage>Your cart is empty.</EmptyMessage>\n        )}\n      </CartItems>\n      <Button onClick={navigateToCheckoutHandler}>Go TO CHECKOUT</Button>\n    </CartDropDownContainer>\n  );\n};\n\nexport default CartDropDown;\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,kCAArB,C,CAEA;;AACA,SACEC,qBADF,EAEEC,SAFF,EAGEC,YAHF,QAIO,4BAJP;;;AAMA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB;EACA,MAAM;IAAEC;EAAF,IAAgBT,UAAU,CAACE,WAAD,CAAhC,CAFyB,CAIzB;;EACA,MAAMQ,QAAQ,GAAGT,WAAW,EAA5B;;EACA,MAAMU,yBAAyB,GAAG,MAAM;IACtCD,QAAQ,CAAC,WAAD,CAAR;EACD,CAFD;EAIA;AACF;AACA;AACA;AACA;;;EACE,oBACE,QAAC,qBAAD;IAAA,wBACE,QAAC,SAAD;MAAA,UACGD,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAeC,IAAD,iBAAU,QAAC,QAAD;QAAwB,QAAQ,EAAEA;MAAlC,GAAeA,IAAI,CAACC,EAApB;QAAA;QAAA;QAAA;MAAA,QAAxB,CADD,gBAGC,QAAC,YAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAJJ;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,MAAD;MAAQ,OAAO,EAAEJ,yBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA3BD;;GAAMH,Y;UAKaP,W;;;KALbO,Y;AA6BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}