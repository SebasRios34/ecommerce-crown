{"ast":null,"code":"import _defineProperty from\"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/node_modules/@babel/runtime/regenerator/index.js\";import{useState}from\"react\";import FormInput from\"../form-input/form-input.component\";import Button,{BUTTON_TYPES_CLASSES}from\"../button/button.component\";import{signInWithGooglePopup,signInAuthUserWithEmailAndPassword}from\"../../utils/firebase/firebase.utils\";import{SignInContainer,ButtonContainer}from\"./sign-in-form.styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var defaultFormFields={email:\"\",password:\"\"};var SignInForm=function SignInForm(){var _useState=useState(defaultFormFields),_useState2=_slicedToArray(_useState,2),formFields=_useState2[0],setFormFields=_useState2[1];var email=formFields.email,password=formFields.password;//using useContext is going to allow us to set user data to then be used in other components\n//const { setCurrentUser } = useContext(UserContext);\nvar resetFormFields=function resetFormFields(){setFormFields(defaultFormFields);};var signInWithGoogle=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return signInWithGooglePopup();case 2:case\"end\":return _context.stop();}}},_callee);}));return function signInWithGoogle(){return _ref.apply(this,arguments);};}();var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var _yield$signInAuthUser,user;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();_context2.prev=1;_context2.next=4;return signInAuthUserWithEmailAndPassword(email,password);case 4:_yield$signInAuthUser=_context2.sent;user=_yield$signInAuthUser.user;//after user clicks submit the user data is set using setCurrentUser\n//setCurrentUser(user);\nresetFormFields();_context2.next=20;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);_context2.t1=_context2.t0.code;_context2.next=_context2.t1===\"auth/wrong-password\"?14:_context2.t1===\"auth/user-not-found\"?16:18;break;case 14:alert(\"incorrect password for email: \"+email);return _context2.abrupt(\"break\",19);case 16:alert(\"no user associated with this email: \"+email);return _context2.abrupt(\"break\",19);case 18:console.log(_context2.t0.code);case 19:console.log(_context2.t0);case 20:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setFormFields(_objectSpread(_objectSpread({},formFields),{},_defineProperty({},name,value)));};return/*#__PURE__*/_jsxs(SignInContainer,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Already have an account\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Sign in with your email and password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(FormInput,{label:\"Email\",inputOptions:{type:\"email\",required:true,onChange:handleChange,name:\"email\",value:email}}),/*#__PURE__*/_jsx(FormInput,{label:\"Password\",inputOptions:{type:\"password\",required:true,onChange:handleChange,name:\"password\",value:password}}),/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Sign In\"}),/*#__PURE__*/_jsx(Button,{type:\"button\",buttonType:BUTTON_TYPES_CLASSES.google,onClick:signInWithGoogle,children:\"Google Sign In\"})]})]})]});};export default SignInForm;","map":{"version":3,"names":["useState","FormInput","Button","BUTTON_TYPES_CLASSES","signInWithGooglePopup","signInAuthUserWithEmailAndPassword","SignInContainer","ButtonContainer","defaultFormFields","email","password","SignInForm","formFields","setFormFields","resetFormFields","signInWithGoogle","handleSubmit","event","preventDefault","user","code","alert","console","log","handleChange","target","name","value","type","required","onChange","google"],"sources":["/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/components/sign-in-form/sign-in-form.components.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport Button, { BUTTON_TYPES_CLASSES } from \"../button/button.component\";\n\nimport {\n  signInWithGooglePopup,\n  signInAuthUserWithEmailAndPassword,\n} from \"../../utils/firebase/firebase.utils\";\n\nimport { SignInContainer, ButtonContainer } from \"./sign-in-form.styles\";\n\nconst defaultFormFields = {\n  email: \"\",\n  password: \"\",\n};\n\nconst SignInForm = () => {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { email, password } = formFields;\n\n  //using useContext is going to allow us to set user data to then be used in other components\n  //const { setCurrentUser } = useContext(UserContext);\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const signInWithGoogle = async () => {\n    await signInWithGooglePopup();\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { user } = await signInAuthUserWithEmailAndPassword(\n        email,\n        password\n      );\n      //after user clicks submit the user data is set using setCurrentUser\n      //setCurrentUser(user);\n\n      resetFormFields();\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/wrong-password\":\n          alert(\"incorrect password for email: \" + email);\n          break;\n        case \"auth/user-not-found\":\n          alert(\"no user associated with this email: \" + email);\n          break;\n        default:\n          console.log(error.code);\n      }\n      console.log(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <h2>Already have an account</h2>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"Email\"\n          inputOptions={{\n            type: \"email\",\n            required: true,\n            onChange: handleChange,\n            name: \"email\",\n            value: email,\n          }}\n        />\n        <FormInput\n          label=\"Password\"\n          inputOptions={{\n            type: \"password\",\n            required: true,\n            onChange: handleChange,\n            name: \"password\",\n            value: password,\n          }}\n        />\n        <ButtonContainer>\n          <Button type=\"submit\">Sign In</Button>\n          <Button\n            type=\"button\"\n            buttonType={BUTTON_TYPES_CLASSES.google}\n            onClick={signInWithGoogle}\n          >\n            Google Sign In\n          </Button>\n        </ButtonContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nexport default SignInForm;\n"],"mappings":"wzBAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,MAAOC,UAAP,KAAsB,oCAAtB,CACA,MAAOC,OAAP,EAAiBC,oBAAjB,KAA6C,4BAA7C,CAEA,OACEC,qBADF,CAEEC,kCAFF,KAGO,qCAHP,CAKA,OAASC,eAAT,CAA0BC,eAA1B,KAAiD,uBAAjD,C,wFAEA,GAAMC,kBAAiB,CAAG,CACxBC,KAAK,CAAE,EADiB,CAExBC,QAAQ,CAAE,EAFc,CAA1B,CAKA,GAAMC,WAAU,CAAG,QAAbA,WAAa,EAAM,CACvB,cAAoCX,QAAQ,CAACQ,iBAAD,CAA5C,wCAAOI,UAAP,eAAmBC,aAAnB,eACA,GAAQJ,MAAR,CAA4BG,UAA5B,CAAQH,KAAR,CAAeC,QAAf,CAA4BE,UAA5B,CAAeF,QAAf,CAEA;AACA;AAEA,GAAMI,gBAAe,CAAG,QAAlBA,gBAAkB,EAAM,CAC5BD,aAAa,CAACL,iBAAD,CAAb,CACD,CAFD,CAIA,GAAMO,iBAAgB,0FAAG,yJACjBX,sBAAqB,EADJ,uDAAH,kBAAhBW,iBAAgB,0CAAtB,CAIA,GAAMC,aAAY,2FAAG,kBAAOC,KAAP,qJACnBA,KAAK,CAACC,cAAN,GADmB,wCAIMb,mCAAkC,CACvDI,KADuD,CAEvDC,QAFuD,CAJxC,6CAITS,IAJS,uBAITA,IAJS,CAQjB;AACA;AAEAL,eAAe,GAXE,gGAaT,aAAMM,IAbG,+BAcV,qBAdU,mBAiBV,qBAjBU,qBAebC,KAAK,CAAC,iCAAmCZ,KAApC,CAAL,CAfa,4CAkBbY,KAAK,CAAC,uCAAyCZ,KAA1C,CAAL,CAlBa,4CAqBba,OAAO,CAACC,GAAR,CAAY,aAAMH,IAAlB,EArBa,QAuBjBE,OAAO,CAACC,GAAR,eAvBiB,sEAAH,kBAAZP,aAAY,6CAAlB,CA2BA,GAAMQ,aAAY,CAAG,QAAfA,aAAe,CAACP,KAAD,CAAW,CAC9B,kBAAwBA,KAAK,CAACQ,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CACAd,aAAa,gCAAMD,UAAN,wBAAmBc,IAAnB,CAA0BC,KAA1B,GAAb,CACD,CAHD,CAKA,mBACE,MAAC,eAAD,yBACE,+CADF,cAEE,8DAFF,cAGE,cAAM,QAAQ,CAAEX,YAAhB,wBACE,KAAC,SAAD,EACE,KAAK,CAAC,OADR,CAEE,YAAY,CAAE,CACZY,IAAI,CAAE,OADM,CAEZC,QAAQ,CAAE,IAFE,CAGZC,QAAQ,CAAEN,YAHE,CAIZE,IAAI,CAAE,OAJM,CAKZC,KAAK,CAAElB,KALK,CAFhB,EADF,cAWE,KAAC,SAAD,EACE,KAAK,CAAC,UADR,CAEE,YAAY,CAAE,CACZmB,IAAI,CAAE,UADM,CAEZC,QAAQ,CAAE,IAFE,CAGZC,QAAQ,CAAEN,YAHE,CAIZE,IAAI,CAAE,UAJM,CAKZC,KAAK,CAAEjB,QALK,CAFhB,EAXF,cAqBE,MAAC,eAAD,yBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,qBADF,cAEE,KAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,UAAU,CAAEP,oBAAoB,CAAC4B,MAFnC,CAGE,OAAO,CAAEhB,gBAHX,4BAFF,GArBF,GAHF,GADF,CAsCD,CArFD,CAuFA,cAAeJ,WAAf"},"metadata":{},"sourceType":"module"}