{"ast":null,"code":"var _jsxFileName = \"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/context/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartItems contains productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); //If found, increment quantity\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } //return new array with modified cartItems/new cart items\n\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); //check if quantity is equal to 1, if it is remove that item from the cart\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nexport const CART_ACTION_TYPES = {\n  SET_IS_CART_OPEN: \"SET_IS_CART_OPEN\",\n  ADD_ITEMS_TO_CART: \"ADD_ITEMS_TO_CART\",\n  REMOVE_ITEM_FROM_CART: \"REMOVE_ITEM_FROM_CART\",\n  CLEAR_ITEM_FROM_CART: \"CLEAR_ITEM_FROM_CART\"\n};\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0\n};\n\nconst cartReducer = (state, action) => {\n  console.log(\"action dispatched\");\n  console.log(action);\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n      return { ...state,\n        isCartOpen: payload\n      };\n\n    case CART_ACTION_TYPES.ADD_ITEMS_TO_CART:\n      return {};\n\n    case CART_ACTION_TYPES.REMOVE_ITEM_FROM_CART:\n      return {};\n\n    case CART_ACTION_TYPES.CLEAR_ITEM_FROM_CART:\n      return {};\n\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\n\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n\n  /*\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  */\n  const [state, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n  const {\n    isCartOpen,\n    cartItems,\n    cartCount,\n    cartTotal\n  } = state;\n\n  const setIsCartOpen = cart => {\n    dispatch({\n      type: CART_ACTION_TYPES.SET_IS_CART_OPEN,\n      payload: cart\n    });\n  };\n\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    setCartTotal(newCartTotal);\n  }, [cartItems]);\n\n  const updateCartItemsReducer = newCartItems => {};\n\n  const addItemToCart = productToAdd => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const removeItemFromCart = cartItemToRemove => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const clearItemFromCart = cartItemToClear => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemFromCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"1qtZM16mBBPYwDh+6Ii1t24ZHBs=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useReducer","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CART_ACTION_TYPES","SET_IS_CART_OPEN","ADD_ITEMS_TO_CART","REMOVE_ITEM_FROM_CART","CLEAR_ITEM_FROM_CART","INITIAL_STATE","cartReducer","state","action","console","log","type","payload","Error","CartProvider","children","dispatch","cart","newCartCount","reduce","total","setCartCount","newCartTotal","price","setCartTotal","updateCartItemsReducer","newCartItems","value"],"sources":["/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/context/cart.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState, useReducer } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartItems contains productToAdd\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  //If found, increment quantity\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  //return new array with modified cartItems/new cart items\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cart item to remove\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  //check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0,\n});\n\nexport const CART_ACTION_TYPES = {\n  SET_IS_CART_OPEN: \"SET_IS_CART_OPEN\",\n  ADD_ITEMS_TO_CART: \"ADD_ITEMS_TO_CART\",\n  REMOVE_ITEM_FROM_CART: \"REMOVE_ITEM_FROM_CART\",\n  CLEAR_ITEM_FROM_CART: \"CLEAR_ITEM_FROM_CART\",\n};\n\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0,\n};\n\nconst cartReducer = (state, action) => {\n  console.log(\"action dispatched\");\n  console.log(action);\n\n  const { type, payload } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n      return {\n        ...state,\n        isCartOpen: payload,\n      };\n    case CART_ACTION_TYPES.ADD_ITEMS_TO_CART:\n      return {};\n    case CART_ACTION_TYPES.REMOVE_ITEM_FROM_CART:\n      return {};\n    case CART_ACTION_TYPES.CLEAR_ITEM_FROM_CART:\n      return {};\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  /*\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  */\n\n  const [state, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n  const { isCartOpen, cartItems, cartCount, cartTotal } = state;\n\n  const setIsCartOpen = (cart) => {\n    dispatch({ type: CART_ACTION_TYPES.SET_IS_CART_OPEN, payload: cart });\n  };\n\n  useEffect(() => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n    setCartCount(newCartCount);\n  }, [cartItems]);\n\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    );\n    setCartTotal(newCartTotal);\n  }, [cartItems]);\n\n  const updateCartItemsReducer = (newCartItems) => {};\n\n  const addItemToCart = (productToAdd) => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const removeItemFromCart = (cartItemToRemove) => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const clearItemFromCart = (cartItemToClear) => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemFromCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}