{"ast":null,"code":"var _jsxFileName = \"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/context/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartItems contains productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); //If found, increment quantity\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } //return new array with modified cartItems/new cart items\n\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); //check if quantity is equal to 1, if it is remove that item from the cart\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  total: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  useEffect(() => {\n    const newTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    setTotal(newTotal);\n  }, [cartItems]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemFromCart = cartItemToRemove => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n\n  const clearItemFromCart = cartItemToClear => {\n    setCartItems(clearCartItem(cartItems, cartItemToClear));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemFromCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    total\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"QT7g6nNx0bwqkSCDGuQAOpzg4J4=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","total","CartProvider","children","setCartItems","setCartCount","setTotal","newCartCount","reduce","newTotal","price","value"],"sources":["/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/context/cart.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartItems contains productToAdd\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  //If found, increment quantity\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  //return new array with modified cartItems/new cart items\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cart item to remove\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  //check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  total: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n    setCartCount(newCartCount);\n  }, [cartItems]);\n\n  useEffect(() => {\n    const newTotal = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    );\n    setTotal(newTotal);\n  }, [cartItems]);\n\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemFromCart = (cartItemToRemove) => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n\n  const clearItemFromCart = (cartItemToClear) => {\n    setCartItems(clearCartItem(cartItems, cartItemToClear));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemFromCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    total,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}