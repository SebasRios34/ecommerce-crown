{"ast":null,"code":"var _jsxFileName = \"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/context/user.context.jsx\",\n    _s = $RefreshSig$();\n\n/* React Context allow us to use and store data between components*/\nimport { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangedListener, createUserDocumentFromAuth } from \"../utils/firebase/firebase.utils\"; //as the actual value you want to access\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n}); //This is the component itself normally wrapped around the <App /> component\n\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  }; //here we are centralizing the need of calling setCurrentUser and createUserDocumentFromAuth in all the different components.\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n\n      setCurrentUser(user);\n      console.log(user);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","onAuthStateChangedListener","createUserDocumentFromAuth","UserContext","currentUser","setCurrentUser","UserProvider","children","value","unsubscribe","user","console","log"],"sources":["/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/context/user.context.jsx"],"sourcesContent":["/* React Context allow us to use and store data between components*/\nimport { createContext, useState, useEffect } from \"react\";\n\nimport {\n  onAuthStateChangedListener,\n  createUserDocumentFromAuth,\n} from \"../utils/firebase/firebase.utils\";\n\n//as the actual value you want to access\nexport const UserContext = createContext({\n  currentUser: null,\n  setCurrentUser: () => null,\n});\n\n//This is the component itself normally wrapped around the <App /> component\nexport const UserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = { currentUser, setCurrentUser };\n\n  //here we are centralizing the need of calling setCurrentUser and createUserDocumentFromAuth in all the different components.\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener((user) => {\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n      setCurrentUser(user);\n      console.log(user);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n"],"mappings":";;;AAAA;AACA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,SACEC,0BADF,EAEEC,0BAFF,QAGO,kCAHP,C,CAKA;;;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EACvCM,WAAW,EAAE,IAD0B;EAEvCC,cAAc,EAAE,MAAM;AAFiB,CAAD,CAAjC,C,CAKP;;AACA,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAM,CAACH,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAMS,KAAK,GAAG;IAAEJ,WAAF;IAAeC;EAAf,CAAd,CAF4C,CAI5C;;EACAL,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGR,0BAA0B,CAAES,IAAD,IAAU;MACvD,IAAIA,IAAJ,EAAU;QACRR,0BAA0B,CAACQ,IAAD,CAA1B;MACD;;MACDL,cAAc,CAACK,IAAD,CAAd;MACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACD,CAN6C,CAA9C;IAQA,OAAOD,WAAP;EACD,CAVQ,EAUN,EAVM,CAAT;EAYA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAED,KAA7B;IAAA,UAAqCD;EAArC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAlBM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}