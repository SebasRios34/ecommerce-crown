{"ast":null,"code":"var _jsxFileName = \"/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/components/sign-up-form/sign-up-form.components.jsx\",\n    _s = $RefreshSig$();\n\n/* USING useState */\nimport { useState } from \"react\";\nimport { createAuthUserWithEmailAndPassword, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport FormInput from \"../form-input/form-input.component\";\nimport Button from \"../button/button.component\";\nimport \"./sign-up-form.styles.scss\"; //1. Create an object with the fields and value it needs at default\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nconst SignUpForm = () => {\n  _s();\n\n  //2. create variable with value and set using useState\n  const [formFields, setFormFields] = useState(defaultFormFields); //3. Descontruction of values inside object\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = formFields; //reset handler to reset all input forms\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  }; //handler submit\n\n\n  const handleSubmit = async event => {\n    //prevents any sudden reload\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    try {\n      /*\n        Firebase imported method:\n        method used to sign up user with email and password\n        validations are created in firebase js\n      */\n      const {\n        user\n      } = await createAuthUserWithEmailAndPassword(email, password);\n      /*\n        Firebase imported method:\n        method used to create a user document into the database\n      */\n\n      await createUserDocumentFromAuth(user, {\n        displayName\n      }); //reset all the form inputs if create of user and document is successful\n\n      resetFormFields();\n    } catch (error) {\n      /*\n        error is obtain thanks to the firebase libraries:\n          auth/email-already-in-use: user already has email assigned\n      */\n      if (error.code === \"auth/email-already-in-use\") {\n        alert(\"Cannot create user, email already in use\");\n      } else {\n        console.log(\"user creation encountered an error\", error);\n      }\n    }\n  }; //4.Create handleEvent linked to the input tag and set the values\n\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Don't have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Display Name\",\n        inputOptions: {\n          type: \"text\",\n          required: true,\n          onChange: handleChange,\n          name: \"displayName\",\n          value: displayName\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        inputOptions: {\n          type: \"email\",\n          required: true,\n          onChange: handleChange,\n          name: \"email\",\n          value: email\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        inputOptions: {\n          type: \"password\",\n          required: true,\n          onChange: handleChange,\n          name: \"password\",\n          value: password\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Confirm Password\",\n        inputOptions: {\n          type: \"password\",\n          required: true,\n          onChange: handleChange,\n          name: \"confirmPassword\",\n          value: confirmPassword\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["useState","createAuthUserWithEmailAndPassword","createUserDocumentFromAuth","FormInput","Button","defaultFormFields","displayName","email","password","confirmPassword","SignUpForm","formFields","setFormFields","resetFormFields","handleSubmit","event","preventDefault","alert","user","error","code","console","log","handleChange","name","value","target","type","required","onChange"],"sources":["/Users/sebasrios/Documents/React-Course/capstone/crwn-clothing/ecommerce-crown/src/components/sign-up-form/sign-up-form.components.jsx"],"sourcesContent":["/* USING useState */\nimport { useState } from \"react\";\n\nimport {\n  createAuthUserWithEmailAndPassword,\n  createUserDocumentFromAuth,\n} from \"../../utils/firebase/firebase.utils\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport Button from \"../button/button.component\";\n\nimport \"./sign-up-form.styles.scss\";\n\n//1. Create an object with the fields and value it needs at default\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst SignUpForm = () => {\n  //2. create variable with value and set using useState\n  const [formFields, setFormFields] = useState(defaultFormFields);\n\n  //3. Descontruction of values inside object\n  const { displayName, email, password, confirmPassword } = formFields;\n\n  //reset handler to reset all input forms\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  //handler submit\n  const handleSubmit = async (event) => {\n    //prevents any sudden reload\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    try {\n      /*\n        Firebase imported method:\n        method used to sign up user with email and password\n        validations are created in firebase js\n      */\n      const { user } = await createAuthUserWithEmailAndPassword(\n        email,\n        password\n      );\n\n      /*\n        Firebase imported method:\n        method used to create a user document into the database\n      */\n      await createUserDocumentFromAuth(user, { displayName });\n\n      //reset all the form inputs if create of user and document is successful\n      resetFormFields();\n    } catch (error) {\n      /*\n        error is obtain thanks to the firebase libraries:\n          auth/email-already-in-use: user already has email assigned\n      */\n      if (error.code === \"auth/email-already-in-use\") {\n        alert(\"Cannot create user, email already in use\");\n      } else {\n        console.log(\"user creation encountered an error\", error);\n      }\n    }\n  };\n\n  //4.Create handleEvent linked to the input tag and set the values\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-up-container\">\n      <h2>Don't have an account?</h2>\n      <span>Sign up with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"Display Name\"\n          inputOptions={{\n            type: \"text\",\n            required: true,\n            onChange: handleChange,\n            name: \"displayName\",\n            value: displayName,\n          }}\n        />\n\n        <FormInput\n          label=\"Email\"\n          inputOptions={{\n            type: \"email\",\n            required: true,\n            onChange: handleChange,\n            name: \"email\",\n            value: email,\n          }}\n        />\n\n        <FormInput\n          label=\"Password\"\n          inputOptions={{\n            type: \"password\",\n            required: true,\n            onChange: handleChange,\n            name: \"password\",\n            value: password,\n          }}\n        />\n\n        <FormInput\n          label=\"Confirm Password\"\n          inputOptions={{\n            type: \"password\",\n            required: true,\n            onChange: handleChange,\n            name: \"confirmPassword\",\n            value: confirmPassword,\n          }}\n        />\n        <Button type=\"submit\">Sign Up</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}